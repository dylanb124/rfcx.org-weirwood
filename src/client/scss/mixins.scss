@import "vars";

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

@mixin translate3d ($x, $y, $z) {
   @include transform(translate3d($x, $y, $z));
}

@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin box-shadow($content) {
    -webkit-box-shadow: $content;
    -moz-box-shadow: $content;
    box-shadow: $content;
}

@mixin mq($media) {
  @if $media == phone {
    @media only screen and (max-width: $tabletMin - 1) { @content; }
  }
  @else if $media == phoneAndTablet {
    @media only screen and (max-width: $tabletMax) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (min-width: $tabletMin) and (max-width: $tabletMax) { @content; }
  }
  @else if $media == tabletAndDesktop {
    @media only screen and (min-width: $tabletMin) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: $tabletMax + 1) { @content; }
  }
  @else if $media == desktopWide {
    @media only screen and (min-width: $desktopWideMin) { @content; }
  }
}

@mixin respond-from($media) {
  @media only screen and (min-width: $media) { @content; }
}

@mixin respond-from-height($media) {
  @media only screen and (min-height: $media) { @content; }
}

@mixin respond-to($media) {
  @media only screen and (max-width: $media) { @content; }
}

@mixin respond-to-height($media) {
  @media only screen and (max-height: $media) { @content; }
}

@mixin respond-between($from, $to) {
  @media only screen and (min-width: $from) and (max-width: $to) { @content; }
}
